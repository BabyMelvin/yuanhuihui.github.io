1. 监控system_server下每个binder线程的 使用情况，内存消耗情况。
2. 监控其他进程的binder
3. 建立更强大的binder在线分析功能；


4.IPCThreadState::joinThreadPool(bool isMain) 通过打开如下来log开关，调试看看binder线程池的加入与退出情况。

LOG_THREADPOOL("**** THREAD %p (PID %d) IS LEAVING THE THREAD POOL err=%p\n",
508        (void*)pthread_self(), getpid(), (void*)result);


 设置system_server进程，ProcessState::self()->setThreadPoolMaxThreadCount(32);


 5. 通过dumpsys 动态打开ams的log

 通过判定IS_USER_BUILD来决定打开的开关

调试looper, 调试4大组件.

评估动态log的性能影响

学习这个项目 红米pro

 
 5. 比如service启动过程， 增加调控功能， 在生命周期的前后， 用于确保问题是处在app本身呢，还是系统服务。
 
 if(DEBUG_SERVICE_TIMEOUT && isWhitList(app)){
 
 }

