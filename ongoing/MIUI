1. 监控system_server下每个binder线程的 使用情况，内存消耗情况。
2. 监控其他进程的binder
3. 建立更强大的binder在线分析功能；


4.IPCThreadState::joinThreadPool(bool isMain) 通过打开如下来log开关，调试看看binder线程池的加入与退出情况。

LOG_THREADPOOL("**** THREAD %p (PID %d) IS LEAVING THE THREAD POOL err=%p\n",
508        (void*)pthread_self(), getpid(), (void*)result);


 设置system_server进程，ProcessState::self()->setThreadPoolMaxThreadCount(32);


 5. 通过dumpsys 动态打开ams的log

 通过判定IS_USER_BUILD来决定打开的开关

调试looper, 调试4大组件.

评估动态log的性能影响

学习这个项目 红米pro


 5. 比如service启动过程， 增加调控功能， 在生命周期的前后， 用于确保问题是处在app本身呢，还是系统服务。

 if(DEBUG_SERVICE_TIMEOUT && isWhitList(app)){

 }


## 一. Service启动阶段监控

1. CI.startServiceCommon

2. AMS.startService
3. AS.bringUpServiceLocked
4. AS.realStartServiceLocked  (start "create")

5. AT.scheduleCreateService
6. AT.handleCreateService
7. service.onCreate()   (end "create")
                         (start "start")
8. AS.sendServiceArgsLocked
9. AT.scheduleServiceArgs
10 -12 . AT.handleServiceArgs (end "start")

时间阶段分析:

1~2: system_server进程的binder线程繁忙
[2~3: 系统准备service信息]

3~4: 进程启动慢
4~5: app进程的binder线程繁忙
5~6: app进程的主线程繁忙, (可能消息队列过长)
6~7: app的onCreate回调执行时间过长

8~9:  app进程的binder线程繁忙
9~10: app进程的主线程繁忙, (可能消息队列过长)
10~11: app的onStartCommand回调执行时间过长
11~12: QueuedWork执行时间过长

实例: 1 2 3 (4 8) (5 9) 6 7 10 11 12

11-23 10:20:29.860  9192  9192 I MIUI-AS : phase 1 service Intent { cmp=com.miui.weather2/.service.UpdateService }

11-23 10:20:29.860  2621  4599 I MIUI-AS : phase 2 service Intent { cmp=com.miui.weather2/.service.UpdateService }, callingPackage=com.miui.weather2
11-23 10:20:29.865  2621  4599 I MIUI-AS : phase 3 service ServiceRecord{366075c u0 com.miui.weather2/.service.UpdateService}, android.content.Intent$FilterComparison@f5539583
11-23 10:20:29.865  2621  4599 I MIUI-AS : phase 4 service ServiceRecord{366075c u0 com.miui.weather2/.service.UpdateService}, ProcessRecord{baba5bd 9192:com.miui.weather2/u0a32}  //scheduleCreateService
11-23 10:20:29.867  2621  4599 I MIUI-AS : phase 8 service ServiceRecord{366075c u0 com.miui.weather2/.service.UpdateService}  //scheduleServiceArgs

11-23 10:20:29.867  9192  9205 I MIUI-AS : phase 5 service com.miui.weather2.service.UpdateService // scheduleCreateService
11-23 10:20:29.867  9192  9205 I MIUI-AS : phase 9 service Intent { cmp=com.miui.weather2/.service.UpdateService }  // scheduleServiceArgs

11-23 10:20:29.867  9192  9192 I MIUI-AS : phase 6 service com.miui.weather2.service.UpdateService
11-23 10:20:29.869  9192  9192 I MIUI-AS : phase 7 service com.miui.weather2.service.UpdateService // onCreate刚执行结束
11-23 10:20:29.869  9192  9192 I MIUI-AS : phase 10 service com.miui.weather2.service.UpdateService@f09c7fe with Intent { cmp=com.miui.weather2/.service.UpdateService }
11-23 10:20:29.869  9192  9192 I MIUI-AS : phase 11 data=com.miui.weather2.service.UpdateService@f09c7fe with Intent { cmp=com.miui.weather2/.service.UpdateService }  //onStartCommand刚执行结束
11-23 10:20:29.869  9192  9192 I MIUI-AS : phase 12 data=com.miui.weather2.service.UpdateService@f09c7fe with Intent { cmp=com.miui.weather2/.service.UpdateService }  //QueuedWork刚执行结束



11-23 10:20:29.860  9192  9192 I MIUI-AS : phase 1 service Intent { cmp=com.miui.weather2/.service.UpdateService }
11-23 10:20:29.860  2621  4599 I MIUI-AS : phase 2 service Intent { cmp=com.miui.weather2/.service.UpdateService }, callingPackage=com.miui.weather2
11-23 10:20:29.865  2621  4599 I MIUI-AS : phase 3 service ServiceRecord{366075c u0 com.miui.weather2/.service.UpdateService}, android.content.Intent$FilterComparison@f5539583
11-23 10:20:29.865  2621  4599 I MIUI-AS : phase 4 service ServiceRecord{366075c u0 com.miui.weather2/.service.UpdateService}, ProcessRecord{baba5bd 9192:com.miui.weather2/u0a32}
11-23 10:20:29.867  9192  9205 I MIUI-AS : phase 5 service com.miui.weather2.service.UpdateService
11-23 10:20:29.867  9192  9192 I MIUI-AS : phase 6 service com.miui.weather2.service.UpdateService
11-23 10:20:29.869  9192  9192 I MIUI-AS : phase 7 service com.miui.weather2.service.UpdateService
11-23 10:20:29.867  2621  4599 I MIUI-AS : phase 8 service ServiceRecord{366075c u0 com.miui.weather2/.service.UpdateService}
11-23 10:20:29.867  9192  9205 I MIUI-AS : phase 9 service Intent { cmp=com.miui.weather2/.service.UpdateService }
11-23 10:20:29.869  9192  9192 I MIUI-AS : phase 10 service com.miui.weather2.service.UpdateService@f09c7fe with Intent { cmp=com.miui.weather2/.service.UpdateService }
11-23 10:20:29.869  9192  9192 I MIUI-AS : phase 11 data=com.miui.weather2.service.UpdateService@f09c7fe with Intent { cmp=com.miui.weather2/.service.UpdateService }
11-23 10:20:29.869  9192  9192 I MIUI-AS : phase 12 data=com.miui.weather2.service.UpdateService@f09c7fe with Intent { cmp=com.miui.weather2/.service.UpdateService }



watchdog, 半路输出一次trace

### 分析




实验1:

setprop persist.sys.binder.max 15
setprop persist.sys.binder.vmsize  1040384


实验2:
setprop persist.sys.binder.max 31
setprop persist.sys.binder.vmsize 2088960



#### 可能需要修改

ViewRootImpl.java 中如下代码的合理性:

    // MIUI ADD: START
    // Creates input channel whatever WindowManager.LayoutParams.inputFlags is.
    if (mInputChannel == null) {
        mInputChannel = new InputChannel();
    }
    // END
