
1. 指针

int *point = &address; //指针
int &alias = k; //引用

void* ptr = nullptr //空指针

2. 头文件写法

防止重复包含

#ifndef _TYPE_A
#define _TYPE_A
#endif

3. namespace

namespace gityuan{
  void methodA();
}

使用：

gityuan::methodA();

4. 构造函数

普通构造函数
拷贝构造函数 （深拷贝、浅拷贝）
拷贝赋值函数

5. 虚函数
虚函数
纯虚函数


6. 几个重要的东西
http://blog.csdn.net/fengbingchun/article/details/51235498

static_cast语法：static_cast<type-id>(expression)

- const_cast: 用来去除变量的const限定
- reinterpret_cast: 在任意指针之间进行互相转换
- static_cast: 指向基类的指针和指向子类的指针之间的互相转换

static_cast和reinterpret_cast一样，在面对const的时候都无能为力：两者都不能去除const限定
